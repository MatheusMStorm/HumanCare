package View;

import DAO.ConsultaDAO;
import DAO.MedicoDAO;
import DAO.PacienteDAO;
import Model.Consulta;
import Model.Medico;
import Model.Paciente;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author moura
 */
public class RegistroConsultas extends javax.swing.JFrame {

    /**
     * Creates new form RegistroMédicos
     */
    public RegistroConsultas() throws SQLException {
        initComponents();
        preencherTabela();
        preencherTabContagem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabConsultas = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        title = new javax.swing.JLabel();
        btnCadastrar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodConsulta = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtPaciente = new javax.swing.JTextField();
        btnBuscaPaciente = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCRM = new javax.swing.JTextField();
        btnBuscaMedico = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtMedico = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtData = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtHora = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtEspecialidade = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabContagem = new javax.swing.JTable();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabConsultas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Cód.", "ID", "Paciente", "Médico", "CRM", "Especialidade", "Data", "Hora"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tabConsultas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabConsultasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabConsultas);
        if (tabConsultas.getColumnModel().getColumnCount() > 0) {
            tabConsultas.getColumnModel().getColumn(0).setMaxWidth(50);
            tabConsultas.getColumnModel().getColumn(2).setMinWidth(200);
            tabConsultas.getColumnModel().getColumn(3).setMinWidth(150);
            tabConsultas.getColumnModel().getColumn(5).setMinWidth(150);
        }

        jButton1.setIcon(new javax.swing.ImageIcon("C:\\Users\\moura\\.java\\HumanCare\\logo\\ICON.png")); // NOI18N

        title.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        title.setText("REGISTRO DE CONSULTAS");

        btnCadastrar.setText("CADASTRAR");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnAtualizar.setText("ATUALIZAR");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnExcluir.setText("EXCLUIR");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Consulta:");

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Paciente:");

        btnBuscaPaciente.setIcon(new javax.swing.ImageIcon("C:\\Users\\moura\\.java\\HumanCare\\logo\\icons8-search-26.png")); // NOI18N
        btnBuscaPaciente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaPacienteActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("ID:");

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("CRM:");

        btnBuscaMedico.setIcon(new javax.swing.ImageIcon("C:\\Users\\moura\\.java\\HumanCare\\logo\\icons8-search-26.png")); // NOI18N
        btnBuscaMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscaMedicoActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Médico:");

        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("Data:");

        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Hora:");

        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Especialidade:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(207, 207, 207)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 437, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCRM, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(txtMedico)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscaMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEspecialidade, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPaciente))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscaPaciente, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(jLabel4)
                        .addComponent(txtCRM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnBuscaMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(txtEspecialidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txtHora, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        tabContagem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "CRM", "Nº Consultas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabContagem);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(title)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnVoltar))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(333, 333, 333)
                        .addComponent(btnCadastrar)
                        .addGap(61, 61, 61)
                        .addComponent(btnAtualizar)
                        .addGap(82, 82, 82)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnVoltar)))
                .addGap(12, 12, 12)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(133, 133, 133))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 567, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        
        dispose();
        new MenuPrincipal().show();
    }//GEN-LAST:event_btnVoltarActionPerformed

    
    private void tabConsultasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabConsultasMouseClicked
        // TODO add your handling code here:
        
        txtCodConsulta.setText((tabConsultas.getValueAt(tabConsultas.getSelectedRow(), 0)).toString());
        txtID.setText((tabConsultas.getValueAt(tabConsultas.getSelectedRow(), 1)).toString());
        txtPaciente.setText((tabConsultas.getValueAt(tabConsultas.getSelectedRow(), 2)).toString());
        txtMedico.setText((tabConsultas.getValueAt(tabConsultas.getSelectedRow(), 3)).toString());
        txtCRM.setText((tabConsultas.getValueAt(tabConsultas.getSelectedRow(), 4)).toString());
        txtEspecialidade.setText((tabConsultas.getValueAt(tabConsultas.getSelectedRow(), 5)).toString());
        txtData.setText((tabConsultas.getValueAt(tabConsultas.getSelectedRow(), 6)).toString());
        txtHora.setText(tabConsultas.getValueAt(tabConsultas.getSelectedRow(), 7).toString());
    }//GEN-LAST:event_tabConsultasMouseClicked

    private void btnBuscaPacienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaPacienteActionPerformed
        try {
            // TODO add your handling code here:
            
            Paciente paciente = new Paciente();
            paciente.setNome_paciente(txtPaciente.getText());
            
            PacienteDAO pacienteDAO = new PacienteDAO();
            pacienteDAO.verificarPaciente(paciente);
            String idStr = Integer.toString(paciente.getId_paciente());
            txtID.setText(idStr);
        } catch (SQLException ex) {
            Logger.getLogger(RegistroConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBuscaPacienteActionPerformed

    private void btnBuscaMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscaMedicoActionPerformed
        try {
            // TODO add your handling code here:
            
            Medico medico = new Medico();
            medico.setNome_medico(txtMedico.getText());
            
            MedicoDAO medicoDAO = new MedicoDAO();
            medicoDAO.verificarMedico(medico);
            txtCRM.setText(medico.getCrm_medico());
            txtEspecialidade.setText(medico.getEspecialidade_medico());
        } catch (SQLException ex) {
            Logger.getLogger(RegistroConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnBuscaMedicoActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        try {
            // TODO add your handling code here:
            
            Consulta consulta = new Consulta(0, null, null, null, null);
            Medico medico = new Medico();
            Paciente paciente = new Paciente();
            
            ConsultaDAO consultaDAO = new ConsultaDAO();
            
            // Pegando os dados do paciente e do médico
            paciente.setId_paciente(Integer.parseInt(txtID.getText()));
            medico.setCrm_medico(txtCRM.getText());
            
            consulta.setPaciente(paciente);
            consulta.setMedico(medico);
            String dataOrigemStr = txtData.getText();
            
            SimpleDateFormat formatoOrigem = new SimpleDateFormat("dd/MM/yyyy");
            Date dataOrigem = formatoOrigem.parse(dataOrigemStr);
            SimpleDateFormat formatoDestino = new SimpleDateFormat("yyyy-MM-dd");
            String dataDestino = formatoDestino.format(dataOrigem);
            
            consulta.setData(dataDestino);
            consulta.setHora(txtHora.getText());
            
            consultaDAO.inserir(consulta);
            JOptionPane.showMessageDialog(null, "Consulta inserida com sucesso!");
            preencherTabela();
            preencherTabContagem();
        } catch (SQLException ex) {
            Logger.getLogger(RegistroConsultas.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível inserir a consulta.");
        } catch (ParseException ex) {
            Logger.getLogger(RegistroConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        // TODO add your handling code here:
        
        try {
            // TODO add your handling code here:
            
            Consulta consulta = new Consulta(0, null, null, null, null);
            Medico medico = new Medico();
            Paciente paciente = new Paciente();
            
            ConsultaDAO consultaDAO = new ConsultaDAO();
            
            // Pegando os dados do paciente e do médico
            paciente.setId_paciente(Integer.parseInt(txtID.getText()));
            medico.setCrm_medico(txtCRM.getText());
            
            consulta.setPaciente(paciente);
            consulta.setMedico(medico);
            String dataOrigemStr = txtData.getText();
            
            SimpleDateFormat formatoOrigem = new SimpleDateFormat("dd/MM/yyyy");
            Date dataOrigem = formatoOrigem.parse(dataOrigemStr);
            SimpleDateFormat formatoDestino = new SimpleDateFormat("yyyy-MM-dd");
            String dataDestino = formatoDestino.format(dataOrigem);
            
            consulta.setData(dataDestino);
            consulta.setHora(txtHora.getText());
            consulta.setId_consulta(Integer.parseInt(txtCodConsulta.getText()));
            
            consultaDAO.atualizar(consulta);
            JOptionPane.showMessageDialog(null, "Consulta atualizada com sucesso!");
            preencherTabela();
            preencherTabContagem();
        } catch (SQLException ex) {
            Logger.getLogger(RegistroConsultas.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível atualizar a consulta.");
        } catch (ParseException ex) {
            Logger.getLogger(RegistroConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:
        
        try {
            // TODO add your handling code here:
            
            Consulta consulta = new Consulta(0, null, null, null, null);
            Medico medico = new Medico();
            Paciente paciente = new Paciente();
            
            ConsultaDAO consultaDAO = new ConsultaDAO();
            
            // Pegando os dados do paciente e do médico
            paciente.setId_paciente(Integer.parseInt(txtID.getText()));
            medico.setCrm_medico(txtCRM.getText());
            
            consulta.setPaciente(paciente);
            consulta.setMedico(medico);
            String dataOrigemStr = txtData.getText();
            
            SimpleDateFormat formatoOrigem = new SimpleDateFormat("dd/MM/yyyy");
            Date dataOrigem = formatoOrigem.parse(dataOrigemStr);
            SimpleDateFormat formatoDestino = new SimpleDateFormat("yyyy-MM-dd");
            String dataDestino = formatoDestino.format(dataOrigem);
            
            consulta.setData(dataDestino);
            consulta.setHora(txtHora.getText());
            consulta.setId_consulta(Integer.parseInt(txtCodConsulta.getText()));
            
            consultaDAO.excluir(consulta);
            JOptionPane.showMessageDialog(null, "Consulta excluída com sucesso!");
            preencherTabela();
            preencherTabContagem();
        } catch (SQLException ex) {
            Logger.getLogger(RegistroConsultas.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Não foi possível excluir a consulta.");
        } catch (ParseException ex) {
            Logger.getLogger(RegistroConsultas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    public void preencherTabela() throws SQLException {
        
        ConsultaDAO consultaDAO = new ConsultaDAO();
        
        List<Consulta> listaConsultas = consultaDAO.consultar();
        
        DefaultTableModel modelo = (DefaultTableModel) tabConsultas.getModel();
        modelo.setNumRows(0);
            
            for (Consulta c : listaConsultas) {
                modelo.addRow(new Object[]{
                    c.getId_consulta(),
                    c.getPaciente().getId_paciente(),
                    c.getPaciente().getNome_paciente(),
                    c.getMedico().getNome_medico(),
                    c.getMedico().getCrm_medico(),
                    c.getMedico().getEspecialidade_medico(),
                    c.getData(),
                    c.getHora()
                });
            }
    }
    
    public void preencherTabContagem() throws SQLException {
        DefaultTableModel modelo = (DefaultTableModel) tabContagem.getModel();
        modelo.setNumRows(0);
        
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/db_humancare", "admin", "admin");
            PreparedStatement pstm = conn.prepareStatement("SELECT m.crm_medico, COUNT(*) AS contagem FROM consulta c INNER JOIN medico m ON c.crm_medico = m.crm_medico GROUP BY m.crm_medico;");
            ResultSet rs = pstm.executeQuery();
            
            while (rs.next()) {
                modelo.addRow(new Object[]{
                    rs.getString("m.crm_medico"),
                    rs.getInt("contagem")
                });
            }
            
            conn.close();
        }
        catch (Exception ErroSQL) {
            JOptionPane.showMessageDialog(null, "Erro ao acessar a tabela.");
        }
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnBuscaMedico;
    private javax.swing.JButton btnBuscaPaciente;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabConsultas;
    private javax.swing.JTable tabContagem;
    private javax.swing.JLabel title;
    private javax.swing.JTextField txtCRM;
    private javax.swing.JTextField txtCodConsulta;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtEspecialidade;
    private javax.swing.JTextField txtHora;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtMedico;
    private javax.swing.JTextField txtPaciente;
    // End of variables declaration//GEN-END:variables
}
